package com.sunbeam.Dao;

import org.hibernate.Session;
import org.hibernate.Transaction;

import com.sunbeam.entities.Player;
import com.sunbeam.entities.Team;
import com.sunbeam.utils.HibernateUtils;

public class PlayerDaoImpl implements PlayerDao {

  @Override
	public String addPlayer(Long teamId,Player player) {
		String msg="Player added failed !!!";
		Session session=HibernateUtils.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		try {
			Team team=session.get(Team.class,teamId);
			if(team != null) {
			
				team.addplayer(player);
				session.persist(player);
			tx.commit();
		}msg="Player added successfully ..";
		}catch(RuntimeException e) {
			if(tx != null);
			tx.rollback();
			throw e;
		
		}return msg;
  }

@Override
public Player getTeamPlayerDetails(long teamId) {
	Player player = null;
	Session session = HibernateUtils.getSessionFactory().getCurrentSession();
	Transaction tx = session.beginTransaction();
	try {
		Team team=session.get(Team.class,teamId);
		if(team != null) {
		
		}
	
	}catch(RuntimeException e) {
		if(tx != null);
		tx.rollback();
		throw e;
	
	}
	return player;
}

@Override
public String removeplayer(long teamId, long playerId) {
	String msg="Removing player data failed!!!";
	Session session = HibernateUtils.getSessionFactory().getCurrentSession();
	Transaction tx=session.beginTransaction();
	try {
	   Team team = session.get(Team.class, teamId);
	   Player player = session.get(Player.class, playerId);
	   
	   if(team != null && player != null) {
		   team.removePlayer
	   }
	   
	}catch(RuntimeException e) {
		if(tx != null);
		tx.rollback();
		throw e;
		
	}
	return msg;
}
}
	
